apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    #kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-staging
    acme.cert-manager.io/http01-edit-in-place: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Access-Control-Allow-Origin: http://localhost:3000";
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,X-LANG,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Api-Key,X-Device-Id,Access-Control-Allow-Origin"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/websocket-services: cr-be-ws-prod
    # nginx.org/websocket-services: cr-be-ws-prod
  name: ap-be-dev-ingress
  namespace: testing
spec:
  ingressClassName: nginx
  rules:
  - host: api-gtw.dev.domain.com
    http:
      paths:
      - backend:
          service:
            name: service1
            port:
              number: 5100
        path: /service1/
        pathType: Prefix
      - backend:
          service:
            name: service2
            port:
              number: 5101
        path: /service2/
        pathType: Prefix
      - backend:
          service:
            name: service3 
            port:
              number: 5102
        path: /service3/
        pathType: Prefix
  tls:
  - hosts:
    - api-gtw.dev.domain.com
    secretName: letsencrypt-staging
# status:
#   loadBalancer:
#     ingress:
#     - ip: 34.142.187.48